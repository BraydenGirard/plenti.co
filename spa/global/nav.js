/* generated by Svelte v3.23.0 */
import {
	SvelteComponent,
	append,
	attr,
	detach,
	element,
	init,
	insert,
	listen,
	noop,
	run_all,
	safe_not_equal,
	space
} from '/spa/web_modules/svelte/internal/index.js';

function create_fragment(ctx) {
	let nav;
	let div1;
	let span0;
	let t1;
	let input;
	let t2;
	let label;
	let t6;
	let div0;
	let a1;
	let t8;
	let a2;
	let t10;
	let a3;
	let t12;
	let a4;
	let t14;
	let a5;
	let mounted;
	let dispose;

	return {
		c() {
			nav = element("nav");
			div1 = element("div");
			span0 = element("span");
			span0.innerHTML = `<a href="/" class="svelte-34czqc"><img alt="planarian" src="/assets/planarian.svg" class="svelte-34czqc">Plenti</a>`;
			t1 = space();
			input = element("input");
			t2 = space();
			label = element("label");

			label.innerHTML = `<span class="svelte-34czqc"></span> 
      <span class="svelte-34czqc"></span> 
      <span class="svelte-34czqc"></span> 
      <span class="svelte-34czqc"></span>`;

			t6 = space();
			div0 = element("div");
			a1 = element("a");
			a1.textContent = "Docs";
			t8 = space();
			a2 = element("a");
			a2.textContent = "Themes";
			t10 = space();
			a3 = element("a");
			a3.textContent = "Donate";
			t12 = space();
			a4 = element("a");
			a4.textContent = "Download";
			t14 = space();
			a5 = element("a");
			a5.innerHTML = `<img src="/assets/social/github.svg" class="svelte-34czqc">`;
			attr(span0, "id", "brand");
			attr(span0, "class", "svelte-34czqc");
			attr(input, "type", "checkbox");
			attr(input, "id", "toggle");
			attr(input, "class", "hidden svelte-34czqc");
			attr(label, "for", "toggle");
			attr(label, "id", "hamburger");
			attr(label, "class", "svelte-34czqc");
			attr(a1, "class", "nav-link svelte-34czqc");
			attr(a1, "href", "/docs");
			attr(a2, "class", "nav-link svelte-34czqc");
			attr(a2, "href", "/themes");
			attr(a3, "class", "nav-link svelte-34czqc");
			attr(a3, "href", "https://github.com/sponsors/plentico");
			attr(a4, "class", "nav-link button svelte-34czqc");
			attr(a4, "href", "/download");
			attr(a5, "class", "nav-link svelte-34czqc");
			attr(a5, "href", "https://github.com/plentico/plenti");
			attr(div0, "id", "menu");
			attr(div0, "class", "svelte-34czqc");
			attr(div1, "class", "container svelte-34czqc");
			attr(nav, "class", "svelte-34czqc");
		},
		m(target, anchor) {
			insert(target, nav, anchor);
			append(nav, div1);
			append(div1, span0);
			append(div1, t1);
			append(div1, input);
			input.checked = /*checked*/ ctx[0];
			append(div1, t2);
			append(div1, label);
			append(div1, t6);
			append(div1, div0);
			append(div0, a1);
			append(div0, t8);
			append(div0, a2);
			append(div0, t10);
			append(div0, a3);
			append(div0, t12);
			append(div0, a4);
			append(div0, t14);
			append(div0, a5);

			if (!mounted) {
				dispose = [
					listen(input, "change", /*input_change_handler*/ ctx[2]),
					listen(a1, "click", /*uncheck*/ ctx[1]),
					listen(a2, "click", /*uncheck*/ ctx[1]),
					listen(a3, "click", /*uncheck*/ ctx[1]),
					listen(a4, "click", /*uncheck*/ ctx[1])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*checked*/ 1) {
				input.checked = /*checked*/ ctx[0];
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(nav);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let checked = false;

	const uncheck = () => {
		$$invalidate(0, checked = false);
	};

	function input_change_handler() {
		checked = this.checked;
		$$invalidate(0, checked);
	}

	return [checked, uncheck, input_change_handler];
}

class Component extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, {});
	}
}

export default Component;